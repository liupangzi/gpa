// Code generated from SelectStatementParser.g4 by ANTLR 4.7.2. DO NOT EDIT.

package selectparser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 45, 325,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 3, 2, 3, 2, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6,
	3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3,
	12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16,
	3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3,
	23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3,
	27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29,
	3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3,
	31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33,
	3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3,
	35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38,
	3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 5, 40, 247, 10,
	40, 3, 40, 3, 40, 7, 40, 251, 10, 40, 12, 40, 14, 40, 254, 11, 40, 3, 40,
	3, 40, 6, 40, 258, 10, 40, 13, 40, 14, 40, 259, 5, 40, 262, 10, 40, 3,
	40, 5, 40, 265, 10, 40, 3, 40, 3, 40, 3, 40, 6, 40, 270, 10, 40, 13, 40,
	14, 40, 271, 5, 40, 274, 10, 40, 5, 40, 276, 10, 40, 3, 41, 3, 41, 3, 41,
	3, 41, 7, 41, 282, 10, 41, 12, 41, 14, 41, 285, 11, 41, 3, 41, 3, 41, 3,
	41, 3, 41, 3, 41, 7, 41, 292, 10, 41, 12, 41, 14, 41, 295, 11, 41, 3, 41,
	5, 41, 298, 10, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 6, 43, 306,
	10, 43, 13, 43, 14, 43, 307, 3, 44, 3, 44, 3, 45, 5, 45, 313, 10, 45, 3,
	46, 3, 46, 5, 46, 317, 10, 46, 3, 47, 6, 47, 320, 10, 47, 13, 47, 14, 47,
	321, 3, 47, 3, 47, 4, 283, 293, 2, 48, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13,
	8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44,
	87, 2, 89, 2, 91, 2, 93, 45, 3, 2, 32, 4, 2, 75, 75, 107, 107, 4, 2, 85,
	85, 117, 117, 4, 2, 80, 80, 112, 112, 4, 2, 81, 81, 113, 113, 4, 2, 86,
	86, 118, 118, 4, 2, 87, 87, 119, 119, 4, 2, 78, 78, 110, 110, 4, 2, 71,
	71, 103, 103, 4, 2, 69, 69, 101, 101, 4, 2, 70, 70, 102, 102, 4, 2, 72,
	72, 104, 104, 4, 2, 84, 84, 116, 116, 4, 2, 79, 79, 111, 111, 4, 2, 89,
	89, 121, 121, 4, 2, 74, 74, 106, 106, 4, 2, 67, 67, 99, 99, 4, 2, 88, 88,
	120, 120, 4, 2, 73, 73, 105, 105, 4, 2, 77, 77, 109, 109, 4, 2, 82, 82,
	114, 114, 4, 2, 68, 68, 100, 100, 4, 2, 91, 91, 123, 123, 4, 2, 90, 90,
	122, 122, 4, 2, 45, 45, 47, 47, 3, 2, 51, 59, 3, 2, 50, 59, 6, 2, 47, 47,
	67, 92, 97, 97, 99, 124, 3, 2, 12, 33, 3, 2, 129, 161, 5, 2, 11, 12, 15,
	15, 34, 34, 2, 338, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2,
	2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2,
	2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2,
	2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3,
	2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77,
	3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2,
	85, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 3, 95, 3, 2, 2, 2, 5, 98, 3, 2, 2, 2,
	7, 101, 3, 2, 2, 2, 9, 105, 3, 2, 2, 2, 11, 110, 3, 2, 2, 2, 13, 112, 3,
	2, 2, 2, 15, 114, 3, 2, 2, 2, 17, 116, 3, 2, 2, 2, 19, 118, 3, 2, 2, 2,
	21, 120, 3, 2, 2, 2, 23, 122, 3, 2, 2, 2, 25, 124, 3, 2, 2, 2, 27, 127,
	3, 2, 2, 2, 29, 129, 3, 2, 2, 2, 31, 131, 3, 2, 2, 2, 33, 134, 3, 2, 2,
	2, 35, 136, 3, 2, 2, 2, 37, 139, 3, 2, 2, 2, 39, 146, 3, 2, 2, 2, 41, 153,
	3, 2, 2, 2, 43, 158, 3, 2, 2, 2, 45, 164, 3, 2, 2, 2, 47, 171, 3, 2, 2,
	2, 49, 176, 3, 2, 2, 2, 51, 180, 3, 2, 2, 2, 53, 183, 3, 2, 2, 2, 55, 189,
	3, 2, 2, 2, 57, 195, 3, 2, 2, 2, 59, 198, 3, 2, 2, 2, 61, 202, 3, 2, 2,
	2, 63, 207, 3, 2, 2, 2, 65, 214, 3, 2, 2, 2, 67, 220, 3, 2, 2, 2, 69, 223,
	3, 2, 2, 2, 71, 229, 3, 2, 2, 2, 73, 233, 3, 2, 2, 2, 75, 237, 3, 2, 2,
	2, 77, 241, 3, 2, 2, 2, 79, 275, 3, 2, 2, 2, 81, 297, 3, 2, 2, 2, 83, 299,
	3, 2, 2, 2, 85, 305, 3, 2, 2, 2, 87, 309, 3, 2, 2, 2, 89, 312, 3, 2, 2,
	2, 91, 316, 3, 2, 2, 2, 93, 319, 3, 2, 2, 2, 95, 96, 9, 2, 2, 2, 96, 97,
	9, 3, 2, 2, 97, 4, 3, 2, 2, 2, 98, 99, 9, 2, 2, 2, 99, 100, 9, 4, 2, 2,
	100, 6, 3, 2, 2, 2, 101, 102, 9, 4, 2, 2, 102, 103, 9, 5, 2, 2, 103, 104,
	9, 6, 2, 2, 104, 8, 3, 2, 2, 2, 105, 106, 9, 4, 2, 2, 106, 107, 9, 7, 2,
	2, 107, 108, 9, 8, 2, 2, 108, 109, 9, 8, 2, 2, 109, 10, 3, 2, 2, 2, 110,
	111, 7, 42, 2, 2, 111, 12, 3, 2, 2, 2, 112, 113, 7, 43, 2, 2, 113, 14,
	3, 2, 2, 2, 114, 115, 7, 61, 2, 2, 115, 16, 3, 2, 2, 2, 116, 117, 7, 60,
	2, 2, 117, 18, 3, 2, 2, 2, 118, 119, 7, 46, 2, 2, 119, 20, 3, 2, 2, 2,
	120, 121, 7, 44, 2, 2, 121, 22, 3, 2, 2, 2, 122, 123, 7, 63, 2, 2, 123,
	24, 3, 2, 2, 2, 124, 125, 7, 35, 2, 2, 125, 126, 7, 63, 2, 2, 126, 26,
	3, 2, 2, 2, 127, 128, 7, 65, 2, 2, 128, 28, 3, 2, 2, 2, 129, 130, 7, 64,
	2, 2, 130, 30, 3, 2, 2, 2, 131, 132, 7, 64, 2, 2, 132, 133, 7, 63, 2, 2,
	133, 32, 3, 2, 2, 2, 134, 135, 7, 62, 2, 2, 135, 34, 3, 2, 2, 2, 136, 137,
	7, 62, 2, 2, 137, 138, 7, 63, 2, 2, 138, 36, 3, 2, 2, 2, 139, 140, 9, 3,
	2, 2, 140, 141, 9, 9, 2, 2, 141, 142, 9, 8, 2, 2, 142, 143, 9, 9, 2, 2,
	143, 144, 9, 10, 2, 2, 144, 145, 9, 6, 2, 2, 145, 38, 3, 2, 2, 2, 146,
	147, 9, 11, 2, 2, 147, 148, 9, 9, 2, 2, 148, 149, 9, 8, 2, 2, 149, 150,
	9, 9, 2, 2, 150, 151, 9, 6, 2, 2, 151, 152, 9, 9, 2, 2, 152, 40, 3, 2,
	2, 2, 153, 154, 9, 12, 2, 2, 154, 155, 9, 13, 2, 2, 155, 156, 9, 5, 2,
	2, 156, 157, 9, 14, 2, 2, 157, 42, 3, 2, 2, 2, 158, 159, 9, 15, 2, 2, 159,
	160, 9, 16, 2, 2, 160, 161, 9, 9, 2, 2, 161, 162, 9, 13, 2, 2, 162, 163,
	9, 9, 2, 2, 163, 44, 3, 2, 2, 2, 164, 165, 9, 16, 2, 2, 165, 166, 9, 17,
	2, 2, 166, 167, 9, 18, 2, 2, 167, 168, 9, 2, 2, 2, 168, 169, 9, 4, 2, 2,
	169, 170, 9, 19, 2, 2, 170, 46, 3, 2, 2, 2, 171, 172, 9, 8, 2, 2, 172,
	173, 9, 2, 2, 2, 173, 174, 9, 20, 2, 2, 174, 175, 9, 9, 2, 2, 175, 48,
	3, 2, 2, 2, 176, 177, 9, 17, 2, 2, 177, 178, 9, 4, 2, 2, 178, 179, 9, 11,
	2, 2, 179, 50, 3, 2, 2, 2, 180, 181, 9, 5, 2, 2, 181, 182, 9, 13, 2, 2,
	182, 52, 3, 2, 2, 2, 183, 184, 9, 5, 2, 2, 184, 185, 9, 13, 2, 2, 185,
	186, 9, 11, 2, 2, 186, 187, 9, 9, 2, 2, 187, 188, 9, 13, 2, 2, 188, 54,
	3, 2, 2, 2, 189, 190, 9, 19, 2, 2, 190, 191, 9, 13, 2, 2, 191, 192, 9,
	5, 2, 2, 192, 193, 9, 7, 2, 2, 193, 194, 9, 21, 2, 2, 194, 56, 3, 2, 2,
	2, 195, 196, 9, 22, 2, 2, 196, 197, 9, 23, 2, 2, 197, 58, 3, 2, 2, 2, 198,
	199, 9, 17, 2, 2, 199, 200, 9, 3, 2, 2, 200, 201, 9, 10, 2, 2, 201, 60,
	3, 2, 2, 2, 202, 203, 9, 11, 2, 2, 203, 204, 9, 9, 2, 2, 204, 205, 9, 3,
	2, 2, 205, 206, 9, 10, 2, 2, 206, 62, 3, 2, 2, 2, 207, 208, 9, 5, 2, 2,
	208, 209, 9, 12, 2, 2, 209, 210, 9, 12, 2, 2, 210, 211, 9, 3, 2, 2, 211,
	212, 9, 9, 2, 2, 212, 213, 9, 6, 2, 2, 213, 64, 3, 2, 2, 2, 214, 215, 9,
	8, 2, 2, 215, 216, 9, 2, 2, 2, 216, 217, 9, 14, 2, 2, 217, 218, 9, 2, 2,
	2, 218, 219, 9, 6, 2, 2, 219, 66, 3, 2, 2, 2, 220, 221, 9, 17, 2, 2, 221,
	222, 9, 3, 2, 2, 222, 68, 3, 2, 2, 2, 223, 224, 9, 10, 2, 2, 224, 225,
	9, 5, 2, 2, 225, 226, 9, 7, 2, 2, 226, 227, 9, 4, 2, 2, 227, 228, 9, 6,
	2, 2, 228, 70, 3, 2, 2, 2, 229, 230, 9, 3, 2, 2, 230, 231, 9, 7, 2, 2,
	231, 232, 9, 14, 2, 2, 232, 72, 3, 2, 2, 2, 233, 234, 9, 14, 2, 2, 234,
	235, 9, 17, 2, 2, 235, 236, 9, 24, 2, 2, 236, 74, 3, 2, 2, 2, 237, 238,
	9, 14, 2, 2, 238, 239, 9, 2, 2, 2, 239, 240, 9, 4, 2, 2, 240, 76, 3, 2,
	2, 2, 241, 242, 9, 17, 2, 2, 242, 243, 9, 18, 2, 2, 243, 244, 9, 19, 2,
	2, 244, 78, 3, 2, 2, 2, 245, 247, 9, 25, 2, 2, 246, 245, 3, 2, 2, 2, 246,
	247, 3, 2, 2, 2, 247, 248, 3, 2, 2, 2, 248, 252, 9, 26, 2, 2, 249, 251,
	5, 87, 44, 2, 250, 249, 3, 2, 2, 2, 251, 254, 3, 2, 2, 2, 252, 250, 3,
	2, 2, 2, 252, 253, 3, 2, 2, 2, 253, 261, 3, 2, 2, 2, 254, 252, 3, 2, 2,
	2, 255, 257, 7, 48, 2, 2, 256, 258, 5, 87, 44, 2, 257, 256, 3, 2, 2, 2,
	258, 259, 3, 2, 2, 2, 259, 257, 3, 2, 2, 2, 259, 260, 3, 2, 2, 2, 260,
	262, 3, 2, 2, 2, 261, 255, 3, 2, 2, 2, 261, 262, 3, 2, 2, 2, 262, 276,
	3, 2, 2, 2, 263, 265, 9, 25, 2, 2, 264, 263, 3, 2, 2, 2, 264, 265, 3, 2,
	2, 2, 265, 266, 3, 2, 2, 2, 266, 273, 5, 87, 44, 2, 267, 269, 7, 48, 2,
	2, 268, 270, 5, 87, 44, 2, 269, 268, 3, 2, 2, 2, 270, 271, 3, 2, 2, 2,
	271, 269, 3, 2, 2, 2, 271, 272, 3, 2, 2, 2, 272, 274, 3, 2, 2, 2, 273,
	267, 3, 2, 2, 2, 273, 274, 3, 2, 2, 2, 274, 276, 3, 2, 2, 2, 275, 246,
	3, 2, 2, 2, 275, 264, 3, 2, 2, 2, 276, 80, 3, 2, 2, 2, 277, 283, 7, 36,
	2, 2, 278, 279, 7, 94, 2, 2, 279, 282, 7, 36, 2, 2, 280, 282, 5, 91, 46,
	2, 281, 278, 3, 2, 2, 2, 281, 280, 3, 2, 2, 2, 282, 285, 3, 2, 2, 2, 283,
	284, 3, 2, 2, 2, 283, 281, 3, 2, 2, 2, 284, 286, 3, 2, 2, 2, 285, 283,
	3, 2, 2, 2, 286, 298, 7, 36, 2, 2, 287, 293, 7, 41, 2, 2, 288, 289, 7,
	94, 2, 2, 289, 292, 7, 41, 2, 2, 290, 292, 5, 91, 46, 2, 291, 288, 3, 2,
	2, 2, 291, 290, 3, 2, 2, 2, 292, 295, 3, 2, 2, 2, 293, 294, 3, 2, 2, 2,
	293, 291, 3, 2, 2, 2, 294, 296, 3, 2, 2, 2, 295, 293, 3, 2, 2, 2, 296,
	298, 7, 41, 2, 2, 297, 277, 3, 2, 2, 2, 297, 287, 3, 2, 2, 2, 298, 82,
	3, 2, 2, 2, 299, 300, 7, 98, 2, 2, 300, 301, 5, 85, 43, 2, 301, 302, 7,
	98, 2, 2, 302, 84, 3, 2, 2, 2, 303, 306, 5, 89, 45, 2, 304, 306, 5, 87,
	44, 2, 305, 303, 3, 2, 2, 2, 305, 304, 3, 2, 2, 2, 306, 307, 3, 2, 2, 2,
	307, 305, 3, 2, 2, 2, 307, 308, 3, 2, 2, 2, 308, 86, 3, 2, 2, 2, 309, 310,
	9, 27, 2, 2, 310, 88, 3, 2, 2, 2, 311, 313, 9, 28, 2, 2, 312, 311, 3, 2,
	2, 2, 313, 90, 3, 2, 2, 2, 314, 317, 10, 29, 2, 2, 315, 317, 10, 30, 2,
	2, 316, 314, 3, 2, 2, 2, 316, 315, 3, 2, 2, 2, 317, 92, 3, 2, 2, 2, 318,
	320, 9, 31, 2, 2, 319, 318, 3, 2, 2, 2, 320, 321, 3, 2, 2, 2, 321, 319,
	3, 2, 2, 2, 321, 322, 3, 2, 2, 2, 322, 323, 3, 2, 2, 2, 323, 324, 8, 47,
	2, 2, 324, 94, 3, 2, 2, 2, 21, 2, 246, 252, 259, 261, 264, 271, 273, 275,
	281, 283, 291, 293, 297, 305, 307, 312, 316, 321, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "'('", "')'", "';'", "':'", "','", "'*'", "'='", "'!='",
	"'?'", "'>'", "'>='", "'<'", "'<='",
}

var lexerSymbolicNames = []string{
	"", "Is", "In", "Not", "Null", "LeftParenthesis", "RightParenthesis", "Semicolon",
	"Colon", "Comma", "Asterisk", "Equal", "NotEqual", "QuestionMark", "GT",
	"GTE", "LT", "LTE", "Select", "Delete", "From", "Where", "Having", "Like",
	"And", "Or", "Order", "Group", "By", "Asc", "Desc", "Offset", "Limit",
	"As", "Count", "Sum", "Max", "Min", "Avg", "Number", "Literal", "BackQuotedString",
	"RawString", "WS",
}

var lexerRuleNames = []string{
	"Is", "In", "Not", "Null", "LeftParenthesis", "RightParenthesis", "Semicolon",
	"Colon", "Comma", "Asterisk", "Equal", "NotEqual", "QuestionMark", "GT",
	"GTE", "LT", "LTE", "Select", "Delete", "From", "Where", "Having", "Like",
	"And", "Or", "Order", "Group", "By", "Asc", "Desc", "Offset", "Limit",
	"As", "Count", "Sum", "Max", "Min", "Avg", "Number", "Literal", "BackQuotedString",
	"RawString", "DecimalDigit", "Character", "UnicodeCharacter", "WS",
}

type SelectStatementParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewSelectStatementParserLexer(input antlr.CharStream) *SelectStatementParserLexer {

	l := new(SelectStatementParserLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "SelectStatementParser.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SelectStatementParserLexer tokens.
const (
	SelectStatementParserLexerIs               = 1
	SelectStatementParserLexerIn               = 2
	SelectStatementParserLexerNot              = 3
	SelectStatementParserLexerNull             = 4
	SelectStatementParserLexerLeftParenthesis  = 5
	SelectStatementParserLexerRightParenthesis = 6
	SelectStatementParserLexerSemicolon        = 7
	SelectStatementParserLexerColon            = 8
	SelectStatementParserLexerComma            = 9
	SelectStatementParserLexerAsterisk         = 10
	SelectStatementParserLexerEqual            = 11
	SelectStatementParserLexerNotEqual         = 12
	SelectStatementParserLexerQuestionMark     = 13
	SelectStatementParserLexerGT               = 14
	SelectStatementParserLexerGTE              = 15
	SelectStatementParserLexerLT               = 16
	SelectStatementParserLexerLTE              = 17
	SelectStatementParserLexerSelect           = 18
	SelectStatementParserLexerDelete           = 19
	SelectStatementParserLexerFrom             = 20
	SelectStatementParserLexerWhere            = 21
	SelectStatementParserLexerHaving           = 22
	SelectStatementParserLexerLike             = 23
	SelectStatementParserLexerAnd              = 24
	SelectStatementParserLexerOr               = 25
	SelectStatementParserLexerOrder            = 26
	SelectStatementParserLexerGroup            = 27
	SelectStatementParserLexerBy               = 28
	SelectStatementParserLexerAsc              = 29
	SelectStatementParserLexerDesc             = 30
	SelectStatementParserLexerOffset           = 31
	SelectStatementParserLexerLimit            = 32
	SelectStatementParserLexerAs               = 33
	SelectStatementParserLexerCount            = 34
	SelectStatementParserLexerSum              = 35
	SelectStatementParserLexerMax              = 36
	SelectStatementParserLexerMin              = 37
	SelectStatementParserLexerAvg              = 38
	SelectStatementParserLexerNumber           = 39
	SelectStatementParserLexerLiteral          = 40
	SelectStatementParserLexerBackQuotedString = 41
	SelectStatementParserLexerRawString        = 42
	SelectStatementParserLexerWS               = 43
)
