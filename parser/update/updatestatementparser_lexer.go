// Code generated from UpdateStatementParser.g4 by ANTLR 4.7.2. DO NOT EDIT.

package updateparser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 47, 340,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3,
	7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3,
	17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28,
	3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3,
	30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33,
	3, 33, 3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3,
	34, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 37,
	3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3,
	39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41,
	3, 42, 5, 42, 262, 10, 42, 3, 42, 3, 42, 7, 42, 266, 10, 42, 12, 42, 14,
	42, 269, 11, 42, 3, 42, 3, 42, 6, 42, 273, 10, 42, 13, 42, 14, 42, 274,
	5, 42, 277, 10, 42, 3, 42, 5, 42, 280, 10, 42, 3, 42, 3, 42, 3, 42, 6,
	42, 285, 10, 42, 13, 42, 14, 42, 286, 5, 42, 289, 10, 42, 5, 42, 291, 10,
	42, 3, 43, 3, 43, 3, 43, 3, 43, 7, 43, 297, 10, 43, 12, 43, 14, 43, 300,
	11, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 7, 43, 307, 10, 43, 12, 43,
	14, 43, 310, 11, 43, 3, 43, 5, 43, 313, 10, 43, 3, 44, 3, 44, 3, 44, 3,
	44, 3, 45, 3, 45, 6, 45, 321, 10, 45, 13, 45, 14, 45, 322, 3, 46, 3, 46,
	3, 47, 5, 47, 328, 10, 47, 3, 48, 3, 48, 5, 48, 332, 10, 48, 3, 49, 6,
	49, 335, 10, 49, 13, 49, 14, 49, 336, 3, 49, 3, 49, 4, 298, 308, 2, 50,
	3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23,
	13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41,
	22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59,
	31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77,
	40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 2, 93, 2, 95, 2,
	97, 47, 3, 2, 32, 4, 2, 87, 87, 119, 119, 4, 2, 82, 82, 114, 114, 4, 2,
	70, 70, 102, 102, 4, 2, 67, 67, 99, 99, 4, 2, 86, 86, 118, 118, 4, 2, 71,
	71, 103, 103, 4, 2, 75, 75, 107, 107, 4, 2, 85, 85, 117, 117, 4, 2, 80,
	80, 112, 112, 4, 2, 81, 81, 113, 113, 4, 2, 78, 78, 110, 110, 4, 2, 69,
	69, 101, 101, 4, 2, 72, 72, 104, 104, 4, 2, 84, 84, 116, 116, 4, 2, 79,
	79, 111, 111, 4, 2, 89, 89, 121, 121, 4, 2, 74, 74, 106, 106, 4, 2, 88,
	88, 120, 120, 4, 2, 73, 73, 105, 105, 4, 2, 77, 77, 109, 109, 4, 2, 68,
	68, 100, 100, 4, 2, 91, 91, 123, 123, 4, 2, 90, 90, 122, 122, 4, 2, 45,
	45, 47, 47, 3, 2, 51, 59, 3, 2, 50, 59, 6, 2, 47, 47, 67, 92, 97, 97, 99,
	124, 3, 2, 12, 33, 3, 2, 129, 161, 5, 2, 11, 12, 15, 15, 34, 34, 2, 353,
	2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2,
	2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2,
	2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2,
	2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3,
	2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41,
	3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2,
	49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2,
	2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2,
	2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2,
	2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3,
	2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87,
	3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 3, 99, 3, 2, 2, 2, 5,
	106, 3, 2, 2, 2, 7, 109, 3, 2, 2, 2, 9, 112, 3, 2, 2, 2, 11, 116, 3, 2,
	2, 2, 13, 121, 3, 2, 2, 2, 15, 125, 3, 2, 2, 2, 17, 127, 3, 2, 2, 2, 19,
	129, 3, 2, 2, 2, 21, 131, 3, 2, 2, 2, 23, 133, 3, 2, 2, 2, 25, 135, 3,
	2, 2, 2, 27, 137, 3, 2, 2, 2, 29, 139, 3, 2, 2, 2, 31, 142, 3, 2, 2, 2,
	33, 144, 3, 2, 2, 2, 35, 146, 3, 2, 2, 2, 37, 149, 3, 2, 2, 2, 39, 151,
	3, 2, 2, 2, 41, 154, 3, 2, 2, 2, 43, 161, 3, 2, 2, 2, 45, 168, 3, 2, 2,
	2, 47, 173, 3, 2, 2, 2, 49, 179, 3, 2, 2, 2, 51, 186, 3, 2, 2, 2, 53, 191,
	3, 2, 2, 2, 55, 195, 3, 2, 2, 2, 57, 198, 3, 2, 2, 2, 59, 204, 3, 2, 2,
	2, 61, 210, 3, 2, 2, 2, 63, 213, 3, 2, 2, 2, 65, 217, 3, 2, 2, 2, 67, 222,
	3, 2, 2, 2, 69, 229, 3, 2, 2, 2, 71, 235, 3, 2, 2, 2, 73, 238, 3, 2, 2,
	2, 75, 244, 3, 2, 2, 2, 77, 248, 3, 2, 2, 2, 79, 252, 3, 2, 2, 2, 81, 256,
	3, 2, 2, 2, 83, 290, 3, 2, 2, 2, 85, 312, 3, 2, 2, 2, 87, 314, 3, 2, 2,
	2, 89, 320, 3, 2, 2, 2, 91, 324, 3, 2, 2, 2, 93, 327, 3, 2, 2, 2, 95, 331,
	3, 2, 2, 2, 97, 334, 3, 2, 2, 2, 99, 100, 9, 2, 2, 2, 100, 101, 9, 3, 2,
	2, 101, 102, 9, 4, 2, 2, 102, 103, 9, 5, 2, 2, 103, 104, 9, 6, 2, 2, 104,
	105, 9, 7, 2, 2, 105, 4, 3, 2, 2, 2, 106, 107, 9, 8, 2, 2, 107, 108, 9,
	9, 2, 2, 108, 6, 3, 2, 2, 2, 109, 110, 9, 8, 2, 2, 110, 111, 9, 10, 2,
	2, 111, 8, 3, 2, 2, 2, 112, 113, 9, 10, 2, 2, 113, 114, 9, 11, 2, 2, 114,
	115, 9, 6, 2, 2, 115, 10, 3, 2, 2, 2, 116, 117, 9, 10, 2, 2, 117, 118,
	9, 2, 2, 2, 118, 119, 9, 12, 2, 2, 119, 120, 9, 12, 2, 2, 120, 12, 3, 2,
	2, 2, 121, 122, 9, 9, 2, 2, 122, 123, 9, 7, 2, 2, 123, 124, 9, 6, 2, 2,
	124, 14, 3, 2, 2, 2, 125, 126, 7, 42, 2, 2, 126, 16, 3, 2, 2, 2, 127, 128,
	7, 43, 2, 2, 128, 18, 3, 2, 2, 2, 129, 130, 7, 61, 2, 2, 130, 20, 3, 2,
	2, 2, 131, 132, 7, 60, 2, 2, 132, 22, 3, 2, 2, 2, 133, 134, 7, 46, 2, 2,
	134, 24, 3, 2, 2, 2, 135, 136, 7, 44, 2, 2, 136, 26, 3, 2, 2, 2, 137, 138,
	7, 63, 2, 2, 138, 28, 3, 2, 2, 2, 139, 140, 7, 35, 2, 2, 140, 141, 7, 63,
	2, 2, 141, 30, 3, 2, 2, 2, 142, 143, 7, 65, 2, 2, 143, 32, 3, 2, 2, 2,
	144, 145, 7, 64, 2, 2, 145, 34, 3, 2, 2, 2, 146, 147, 7, 64, 2, 2, 147,
	148, 7, 63, 2, 2, 148, 36, 3, 2, 2, 2, 149, 150, 7, 62, 2, 2, 150, 38,
	3, 2, 2, 2, 151, 152, 7, 62, 2, 2, 152, 153, 7, 63, 2, 2, 153, 40, 3, 2,
	2, 2, 154, 155, 9, 9, 2, 2, 155, 156, 9, 7, 2, 2, 156, 157, 9, 12, 2, 2,
	157, 158, 9, 7, 2, 2, 158, 159, 9, 13, 2, 2, 159, 160, 9, 6, 2, 2, 160,
	42, 3, 2, 2, 2, 161, 162, 9, 4, 2, 2, 162, 163, 9, 7, 2, 2, 163, 164, 9,
	12, 2, 2, 164, 165, 9, 7, 2, 2, 165, 166, 9, 6, 2, 2, 166, 167, 9, 7, 2,
	2, 167, 44, 3, 2, 2, 2, 168, 169, 9, 14, 2, 2, 169, 170, 9, 15, 2, 2, 170,
	171, 9, 11, 2, 2, 171, 172, 9, 16, 2, 2, 172, 46, 3, 2, 2, 2, 173, 174,
	9, 17, 2, 2, 174, 175, 9, 18, 2, 2, 175, 176, 9, 7, 2, 2, 176, 177, 9,
	15, 2, 2, 177, 178, 9, 7, 2, 2, 178, 48, 3, 2, 2, 2, 179, 180, 9, 18, 2,
	2, 180, 181, 9, 5, 2, 2, 181, 182, 9, 19, 2, 2, 182, 183, 9, 8, 2, 2, 183,
	184, 9, 10, 2, 2, 184, 185, 9, 20, 2, 2, 185, 50, 3, 2, 2, 2, 186, 187,
	9, 12, 2, 2, 187, 188, 9, 8, 2, 2, 188, 189, 9, 21, 2, 2, 189, 190, 9,
	7, 2, 2, 190, 52, 3, 2, 2, 2, 191, 192, 9, 5, 2, 2, 192, 193, 9, 10, 2,
	2, 193, 194, 9, 4, 2, 2, 194, 54, 3, 2, 2, 2, 195, 196, 9, 11, 2, 2, 196,
	197, 9, 15, 2, 2, 197, 56, 3, 2, 2, 2, 198, 199, 9, 11, 2, 2, 199, 200,
	9, 15, 2, 2, 200, 201, 9, 4, 2, 2, 201, 202, 9, 7, 2, 2, 202, 203, 9, 15,
	2, 2, 203, 58, 3, 2, 2, 2, 204, 205, 9, 20, 2, 2, 205, 206, 9, 15, 2, 2,
	206, 207, 9, 11, 2, 2, 207, 208, 9, 2, 2, 2, 208, 209, 9, 3, 2, 2, 209,
	60, 3, 2, 2, 2, 210, 211, 9, 22, 2, 2, 211, 212, 9, 23, 2, 2, 212, 62,
	3, 2, 2, 2, 213, 214, 9, 5, 2, 2, 214, 215, 9, 9, 2, 2, 215, 216, 9, 13,
	2, 2, 216, 64, 3, 2, 2, 2, 217, 218, 9, 4, 2, 2, 218, 219, 9, 7, 2, 2,
	219, 220, 9, 9, 2, 2, 220, 221, 9, 13, 2, 2, 221, 66, 3, 2, 2, 2, 222,
	223, 9, 11, 2, 2, 223, 224, 9, 14, 2, 2, 224, 225, 9, 14, 2, 2, 225, 226,
	9, 9, 2, 2, 226, 227, 9, 7, 2, 2, 227, 228, 9, 6, 2, 2, 228, 68, 3, 2,
	2, 2, 229, 230, 9, 12, 2, 2, 230, 231, 9, 8, 2, 2, 231, 232, 9, 16, 2,
	2, 232, 233, 9, 8, 2, 2, 233, 234, 9, 6, 2, 2, 234, 70, 3, 2, 2, 2, 235,
	236, 9, 5, 2, 2, 236, 237, 9, 9, 2, 2, 237, 72, 3, 2, 2, 2, 238, 239, 9,
	13, 2, 2, 239, 240, 9, 11, 2, 2, 240, 241, 9, 2, 2, 2, 241, 242, 9, 10,
	2, 2, 242, 243, 9, 6, 2, 2, 243, 74, 3, 2, 2, 2, 244, 245, 9, 9, 2, 2,
	245, 246, 9, 2, 2, 2, 246, 247, 9, 16, 2, 2, 247, 76, 3, 2, 2, 2, 248,
	249, 9, 16, 2, 2, 249, 250, 9, 5, 2, 2, 250, 251, 9, 24, 2, 2, 251, 78,
	3, 2, 2, 2, 252, 253, 9, 16, 2, 2, 253, 254, 9, 8, 2, 2, 254, 255, 9, 10,
	2, 2, 255, 80, 3, 2, 2, 2, 256, 257, 9, 5, 2, 2, 257, 258, 9, 19, 2, 2,
	258, 259, 9, 20, 2, 2, 259, 82, 3, 2, 2, 2, 260, 262, 9, 25, 2, 2, 261,
	260, 3, 2, 2, 2, 261, 262, 3, 2, 2, 2, 262, 263, 3, 2, 2, 2, 263, 267,
	9, 26, 2, 2, 264, 266, 5, 91, 46, 2, 265, 264, 3, 2, 2, 2, 266, 269, 3,
	2, 2, 2, 267, 265, 3, 2, 2, 2, 267, 268, 3, 2, 2, 2, 268, 276, 3, 2, 2,
	2, 269, 267, 3, 2, 2, 2, 270, 272, 7, 48, 2, 2, 271, 273, 5, 91, 46, 2,
	272, 271, 3, 2, 2, 2, 273, 274, 3, 2, 2, 2, 274, 272, 3, 2, 2, 2, 274,
	275, 3, 2, 2, 2, 275, 277, 3, 2, 2, 2, 276, 270, 3, 2, 2, 2, 276, 277,
	3, 2, 2, 2, 277, 291, 3, 2, 2, 2, 278, 280, 9, 25, 2, 2, 279, 278, 3, 2,
	2, 2, 279, 280, 3, 2, 2, 2, 280, 281, 3, 2, 2, 2, 281, 288, 5, 91, 46,
	2, 282, 284, 7, 48, 2, 2, 283, 285, 5, 91, 46, 2, 284, 283, 3, 2, 2, 2,
	285, 286, 3, 2, 2, 2, 286, 284, 3, 2, 2, 2, 286, 287, 3, 2, 2, 2, 287,
	289, 3, 2, 2, 2, 288, 282, 3, 2, 2, 2, 288, 289, 3, 2, 2, 2, 289, 291,
	3, 2, 2, 2, 290, 261, 3, 2, 2, 2, 290, 279, 3, 2, 2, 2, 291, 84, 3, 2,
	2, 2, 292, 298, 7, 36, 2, 2, 293, 294, 7, 94, 2, 2, 294, 297, 7, 36, 2,
	2, 295, 297, 5, 95, 48, 2, 296, 293, 3, 2, 2, 2, 296, 295, 3, 2, 2, 2,
	297, 300, 3, 2, 2, 2, 298, 299, 3, 2, 2, 2, 298, 296, 3, 2, 2, 2, 299,
	301, 3, 2, 2, 2, 300, 298, 3, 2, 2, 2, 301, 313, 7, 36, 2, 2, 302, 308,
	7, 41, 2, 2, 303, 304, 7, 94, 2, 2, 304, 307, 7, 41, 2, 2, 305, 307, 5,
	95, 48, 2, 306, 303, 3, 2, 2, 2, 306, 305, 3, 2, 2, 2, 307, 310, 3, 2,
	2, 2, 308, 309, 3, 2, 2, 2, 308, 306, 3, 2, 2, 2, 309, 311, 3, 2, 2, 2,
	310, 308, 3, 2, 2, 2, 311, 313, 7, 41, 2, 2, 312, 292, 3, 2, 2, 2, 312,
	302, 3, 2, 2, 2, 313, 86, 3, 2, 2, 2, 314, 315, 7, 98, 2, 2, 315, 316,
	5, 89, 45, 2, 316, 317, 7, 98, 2, 2, 317, 88, 3, 2, 2, 2, 318, 321, 5,
	93, 47, 2, 319, 321, 5, 91, 46, 2, 320, 318, 3, 2, 2, 2, 320, 319, 3, 2,
	2, 2, 321, 322, 3, 2, 2, 2, 322, 320, 3, 2, 2, 2, 322, 323, 3, 2, 2, 2,
	323, 90, 3, 2, 2, 2, 324, 325, 9, 27, 2, 2, 325, 92, 3, 2, 2, 2, 326, 328,
	9, 28, 2, 2, 327, 326, 3, 2, 2, 2, 328, 94, 3, 2, 2, 2, 329, 332, 10, 29,
	2, 2, 330, 332, 10, 30, 2, 2, 331, 329, 3, 2, 2, 2, 331, 330, 3, 2, 2,
	2, 332, 96, 3, 2, 2, 2, 333, 335, 9, 31, 2, 2, 334, 333, 3, 2, 2, 2, 335,
	336, 3, 2, 2, 2, 336, 334, 3, 2, 2, 2, 336, 337, 3, 2, 2, 2, 337, 338,
	3, 2, 2, 2, 338, 339, 8, 49, 2, 2, 339, 98, 3, 2, 2, 2, 21, 2, 261, 267,
	274, 276, 279, 286, 288, 290, 296, 298, 306, 308, 312, 320, 322, 327, 331,
	336, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "", "", "'('", "')'", "';'", "':'", "','", "'*'", "'='",
	"'!='", "'?'", "'>'", "'>='", "'<'", "'<='",
}

var lexerSymbolicNames = []string{
	"", "Update", "Is", "In", "Not", "Null", "Set", "LeftParenthesis", "RightParenthesis",
	"Semicolon", "Colon", "Comma", "Asterisk", "Equal", "NotEqual", "QuestionMark",
	"GT", "GTE", "LT", "LTE", "Select", "Delete", "From", "Where", "Having",
	"Like", "And", "Or", "Order", "Group", "By", "Asc", "Desc", "Offset", "Limit",
	"As", "Count", "Sum", "Max", "Min", "Avg", "Number", "Literal", "BackQuotedString",
	"RawString", "WS",
}

var lexerRuleNames = []string{
	"Update", "Is", "In", "Not", "Null", "Set", "LeftParenthesis", "RightParenthesis",
	"Semicolon", "Colon", "Comma", "Asterisk", "Equal", "NotEqual", "QuestionMark",
	"GT", "GTE", "LT", "LTE", "Select", "Delete", "From", "Where", "Having",
	"Like", "And", "Or", "Order", "Group", "By", "Asc", "Desc", "Offset", "Limit",
	"As", "Count", "Sum", "Max", "Min", "Avg", "Number", "Literal", "BackQuotedString",
	"RawString", "DecimalDigit", "Character", "UnicodeCharacter", "WS",
}

type UpdateStatementParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewUpdateStatementParserLexer(input antlr.CharStream) *UpdateStatementParserLexer {

	l := new(UpdateStatementParserLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "UpdateStatementParser.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// UpdateStatementParserLexer tokens.
const (
	UpdateStatementParserLexerUpdate           = 1
	UpdateStatementParserLexerIs               = 2
	UpdateStatementParserLexerIn               = 3
	UpdateStatementParserLexerNot              = 4
	UpdateStatementParserLexerNull             = 5
	UpdateStatementParserLexerSet              = 6
	UpdateStatementParserLexerLeftParenthesis  = 7
	UpdateStatementParserLexerRightParenthesis = 8
	UpdateStatementParserLexerSemicolon        = 9
	UpdateStatementParserLexerColon            = 10
	UpdateStatementParserLexerComma            = 11
	UpdateStatementParserLexerAsterisk         = 12
	UpdateStatementParserLexerEqual            = 13
	UpdateStatementParserLexerNotEqual         = 14
	UpdateStatementParserLexerQuestionMark     = 15
	UpdateStatementParserLexerGT               = 16
	UpdateStatementParserLexerGTE              = 17
	UpdateStatementParserLexerLT               = 18
	UpdateStatementParserLexerLTE              = 19
	UpdateStatementParserLexerSelect           = 20
	UpdateStatementParserLexerDelete           = 21
	UpdateStatementParserLexerFrom             = 22
	UpdateStatementParserLexerWhere            = 23
	UpdateStatementParserLexerHaving           = 24
	UpdateStatementParserLexerLike             = 25
	UpdateStatementParserLexerAnd              = 26
	UpdateStatementParserLexerOr               = 27
	UpdateStatementParserLexerOrder            = 28
	UpdateStatementParserLexerGroup            = 29
	UpdateStatementParserLexerBy               = 30
	UpdateStatementParserLexerAsc              = 31
	UpdateStatementParserLexerDesc             = 32
	UpdateStatementParserLexerOffset           = 33
	UpdateStatementParserLexerLimit            = 34
	UpdateStatementParserLexerAs               = 35
	UpdateStatementParserLexerCount            = 36
	UpdateStatementParserLexerSum              = 37
	UpdateStatementParserLexerMax              = 38
	UpdateStatementParserLexerMin              = 39
	UpdateStatementParserLexerAvg              = 40
	UpdateStatementParserLexerNumber           = 41
	UpdateStatementParserLexerLiteral          = 42
	UpdateStatementParserLexerBackQuotedString = 43
	UpdateStatementParserLexerRawString        = 44
	UpdateStatementParserLexerWS               = 45
)
